name: Build and Deploy

on:
  push:
    branches:
      - master
    tags:
      - "fao-maps-*"

jobs:
  scan_code :
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  build_and_deploy:
    runs-on: ubuntu-22.04
    needs: scan_code
    permissions:
      id-token: write
      contents: read
      issues: write
    environment: |-
      ${{
        startsWith(github.ref_name, 'fao-maps-prod-') && 'production' ||
        startsWith(github.ref_name, 'fao-maps-review-') && 'review' ||
        github.ref_name == 'master' && 'review'
      }}
    env:
      TAG_USER: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY }}/${{ vars.NAME }}_user:${{ github.run_number }}
      TAG_REGISTRY: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY }}/${{ vars.NAME }}:${{ github.run_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_ID_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_NAME }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Create env file
        uses: un-fao/fao-ga-create-env-file@v2
        with:
          variables: ${{ toJson(vars) }}
          secrets: ${{ toJson(secrets) }}

      - name: Replace Variables
        uses: un-fao/fao-ga-substitute-action@v2
        with:
          replace_undefined: true
          env-files: .env
          input-files: |
            iac.yml
            user-registry/Dockerfile
            asset-registry/Dockerfile

      # - name: cat
      #   run: |
      #     cat .env
      #     touch .file_test
      #     ls -la .

      - name: Build
        run: |
          # echo "### list-files-for-upload ###"
          # echo "### .env file is not in the following list ###"
          # gcloud meta list-files-for-upload
          echo "### gcloudignore/enabled false ###"
          gcloud config set gcloudignore/enabled false
          # echo "### list-files-for-upload ###"
          # echo "### .env file is NOW PRESENT in the following list ###"
          # gcloud meta list-files-for-upload
          gcloud builds submit --tag ${{ env.TAG }}
        
            opa/Dockerfile
            gateway/src/Dockerfile
            gateway/src/app/service-account.json

      - name: Build USER
        working-directory: user-registry/src
        run: gcloud builds submit --tag ${{ env.TAG_USER }} .

      - name: Build REGISTRY
        working-directory: asset-registry/src
        run: gcloud builds submit --tag ${{ env.TAG_REGISTRY }} .

      - name: Deploy
        run: |
          gcloud run services replace iac.yml --platform=managed --region=${{ vars.REGION }}
          gcloud run services set-iam-policy ${{ vars.NAME }} policy.yml --region=${{ vars.REGION }}

      - name: Create Issue
        if: failure()
        uses: un-fao/fao-ga-create-issue@v2
